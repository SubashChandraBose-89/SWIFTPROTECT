import pytest
from selenium import webdriver
from selenium.webdriver.support.wait import WebDriverWait
from PageObjects.Swift_FieldInterview import SwiftFieldInterview
from PageObjects.Swift_Login import SwiftLogin
from Utilities.ExcelUtils import Pandas
from Utilities.readProperties import ReadConfig
from Utilities.Logger import LogGenerator


class Test_FieldInterview_TC:
    baseURL = ReadConfig.getURL()
    username = ReadConfig.getUseremail()
    password = ReadConfig.getPassword()
    logger = LogGenerator.logenerator()
    df = Pandas.dataframe()

    @pytest.mark.sanity
    def test_fieldInterview(self):
        self.driver = webdriver.Chrome()
        self.driver.get(self.baseURL)
        self.driver.maximize_window()
        self.swftLogin = SwiftLogin(self.driver)
        self.driver.implicitly_wait(30)
        self.swftLogin.setUsername(self.username)
        self.swftLogin.setPassword(self.password)
        self.swftLogin.login()
        self.swftLogin.dismissAlert()
        self.logger.info("SWIFT PROTECT -> FIELD INTERVIEW TEST INITIATED")
        self.title_name = self.driver.title
        print("Title name -> "+self.title_name+" Login Successful")
        self.FI = SwiftFieldInterview(self.driver, WebDriverWait)
        self.driver.implicitly_wait(20)
        self.FI.clickAgencyRecords()
        self.FI.clickFieldInterviews()
        self.FI.getTitle1()
        print("Field Interview Page Opened")
        self.FI.clickNewFIbutton()
        self.FI.setFiInterviewdata("04/20/2023")
        self.FI.setFiBusinessname(self.df.iloc[0, 1])
        self.FI.setFiUnitnum()
        self.FI.closeAlert1()
        self.FI.setFiAddress(self.df.iloc[1, 1])
        self.FI.setFiState(self.df.iloc[2, 1])
        self.FI.setFiStreetName(self.df.iloc[3, 1])
        self.FI.setFiCity(self.df.iloc[4, 1])
        self.FI.setFiZip(self.df.iloc[5, 1])
        self.FI.setFiTxtEditor(self.df.iloc[6, 1])
        self.FI.clickFiSave()
        self.FI.disableGoogleprompt()
        self.logger.info("SWIFT PROTECT -> FIELD INTERVIEW PAGE DATA SUCCESSFULLY ENTERED")
        self.FI.switchToSubjectDetails()
        self.FI.clickNewDetails()
        self.FI.addWithout_MNI()
        self.FI.setFiSubjectCode()
        self.FI.setFiFirstname(self.df.iloc[7, 1])
        self.FI.setFiSSNnumber(self.df.iloc[8, 1])
        self.FI.setFiLastname(self.df.iloc[9, 1])
        self.FI.setFiMiddlename(self.df.iloc[10, 1])
        self.FI.setFiAlertnotes(self.df.iloc[11, 1])
        self.FI.setFiComment(self.df.iloc[12, 1])
        self.logger.info("SWIFT PROTECT -> SUBJECT DETAILS DATA SUCCESSFULLY ENTERED")
        self.FI.switchToOtherdetails()
        self.FI.setFiResStatus(self.df.iloc[13, 1])
        self.FI.setFiDOB(self.df.iloc[14, 1])
        self.FI.setFiSex(self.df.iloc[15, 1])
        self.FI.setFiDrivngLicn(self.df.iloc[16, 1])
        self.FI.setFiEthnicty(self.df.iloc[17, 1])
        self.FI.setFiWeightMin(self.df.iloc[18, 1])
        self.FI.setFiWeightMax(self.df.iloc[19, 1])
        self.FI.setFiHaircolor(self.df.iloc[20, 1])
        self.FI.setFiHairLen(self.df.iloc[21, 1])
        self.FI.setFiComplexn(self.df.iloc[22, 1])
        self.FI.setFiAttire(self.df.iloc[23, 1])
        self.FI.setFiScartchn()
        self.FI.setFiType()
        self.FI.setFiOthrResStatus(self.df.iloc[24, 1])
        self.FI.setFiAgeMin(self.df.iloc[25, 1])
        self.FI.setfiAgemax(self.df.iloc[26, 1])
        self.FI.setFiDriLicState(self.df.iloc[27, 1])
        self.FI.setFiRace(self.df.iloc[28, 1])
        self.FI.setFiHeightFtMin(self.df.iloc[29, 1])
        self.FI.setFiHeighInMin(self.df.iloc[30, 1])
        self.FI.setFiHeightFtMax(self.df.iloc[31, 1])
        self.FI.setFiHeighInMax(self.df.iloc[32, 1])
        self.FI.setFiEyecolor(self.df.iloc[33, 1])
        self.FI.setFiHairStyle(self.df.iloc[34, 1])
        self.FI.setFiFacialHair(self.df.iloc[35, 1])
        self.FI.setFiBuild(self.df.iloc[36, 1])
        self.FI.setFiTeeth(self.df.iloc[37, 1])
        self.logger.info("SWIFT PROTECT -> OTHER DETAILS DATA SUCCESSFULLY ENTERED")
        self.FI.switchToAddress()
        self.FI.setFiStreetname(self.df.iloc[38, 1])
        self.FI.setFiSubCity()
        self.FI.clickAlert3()
        self.FI.setFiSubCity1(self.df.iloc[39, 1])
        self.FI.setFiSubZip(self.df.iloc[40, 1])
        self.FI.setFiCellnum(self.df.iloc[41, 1])
        self.FI.setFiEmail(self.df.iloc[42, 1])
        self.FI.setFiUnitNumber(self.df.iloc[43, 1])
        self.FI.setFiSubState(self.df.iloc[44, 1])
        self.FI.setFiHomeNumber(self.df.iloc[45, 1])
        self.FI.setFiWorkNumber(self.df.iloc[46, 1])
        self.logger.info("SWIFT PROTECT -> ADDRESS DATA SUCCESSFULLY ENTERED")
        self.FI.switchToVehicleDetails()
        self.FI.setFiPlateNum(self.df.iloc[47, 1])
        self.FI.setFiOccupant()
        self.FI.clickAlert4()
        self.FI.setFiOccupant1(self.df.iloc[48, 1])
        self.FI.setFiMakeID(self.df.iloc[49, 1])
        self.FI.setFiMakeID1()
        self.FI.setFiMakeIDSelect()
        self.FI.setFiStyleChosen()
        self.FI.setFiStyleSelect()
        self.FI.setFiButtomColor()
        self.FI.setFiButtomSelect()
        self.FI.setFiVehicleYear(self.df.iloc[50, 1])
        self.FI.setFiTopcolor()
        self.FI.setFiTopcolorSelect()
        self.FI.setFiPlateState(self.df.iloc[51, 1])
        self.logger.info("SWIFT PROTECT -> VEHICLE DATA SUCCESSFULLY ENTERED")
        self.FI.setFiFinalButSave()
        self.FI.setFiSuccessMsg()
        print("Data's Saved")
        self.driver.close()








